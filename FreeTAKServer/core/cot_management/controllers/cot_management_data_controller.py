#######################################################
# 
# core_name_general_controller.py
# Python implementation of the Class CoreNameGeneralController
# Generated by Enterprise Architect
# Created on:      16-Dec-2022 10:56:05 AM
# Original author: Giu Platania
# 
#######################################################
from FreeTAKServer.components.core.abstract_component.cot_node import CoTNode
from FreeTAKServer.core.cot_management.controllers.cot_management_domain_controller import CoTManagementDomainController
from FreeTAKServer.core.cot_management.controllers.cot_management_persistence_controller import CoTManagementPersistenceController
from FreeTAKServer.core.domain.node import Node
from digitalpy.core.main.controller import Controller
from digitalpy.core.zmanager.request import Request
from digitalpy.core.zmanager.response import Response
from digitalpy.core.zmanager.action_mapper import ActionMapper
from digitalpy.core.digipy_configuration.configuration import Configuration
from .cot_management_private_cot_controller import CoTManagementPrivateCoTController

class COTManagementDataController(Controller):
    """this controller is responsible for general or fundamental component functionality"""
    def __init__(
        self,
        request: Request,
        response: Response,
    sync_action_mapper: ActionMapper,
        configuration: Configuration,
    ) -> None:
        super().__init__(request, response, sync_action_mapper, configuration)
        self.persistence_controller = CoTManagementPersistenceController(request, response, sync_action_mapper, configuration)
        self.domain_controller = CoTManagementDomainController(request, response, sync_action_mapper, configuration)

    def initialize(self, request: Request, response: Response):
        super().initialize(request, response)
        self.persistence_controller.initialize(request, response)
        self.domain_controller.initialize(request, response)

    def get_saved_cot(self, cot_id: str, config_loader, *args, **kwargs):
        db_event = self.persistence_controller.get_cot(cot_id)
        event = self.domain_controller.create_standard_xml(config_loader)
        completed_event = self.domain_controller.complete_standard_xml(event, db_event)
        self.response.set_value("cot", completed_event)